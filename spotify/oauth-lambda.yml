AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  BucketName:
    Type: String
    Default: com.wangdera.oauth-tokenstore
Resources:
  LambdaExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: "sts:AssumeRole"
            Principal:
              Service: lambda.amazonaws.com
      Path: "/"
      Policies:
        - PolicyName: root-logs
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:*
                Resource: arn:aws:logs:*:*:*
        - PolicyName: "AllowS3BucketAccess"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "s3:*"
                Resource: !Join [ "", [ "arn:aws:s3:::", !Ref BucketName, "/*" ] ]
        - PolicyName: "AllowXRayAccess"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "xray:PutTraceSegments"
                Resource: "*"
  TokenRecorder:
    Type: "AWS::Lambda::Function"
    Properties:
      Handler: "index.handler"
      Role:
        Fn::GetAtt: [ "LambdaExecutionRole", "Arn" ]
      Code:
        ZipFile: |
              var AWS = require('aws-sdk');
              function putObjectToS3(bucket, key, data){
                var s3 = new AWS.S3();
                var params = {
                  Bucket : bucket,
                  Key : key,
                  Body : data
                }
                s3.putObject(params, function(err, data) {
                  if (err) console.log(err, err.stack); // an error occurred
                  else     console.log(data);           // successful response
                });
              }
      Runtime: "nodejs4.3"
      Timeout: 25
      TracingConfig:
        Mode: "Active"
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
    DeletionPolicy: Delete